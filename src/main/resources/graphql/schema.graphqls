enum Platform {
    PC,
    Switch,
    PS5,
    PS4,
    Xbox
}

enum Status {
    TODO,
    InProgress,
    Failed,
    Completed
}

type Game {
    gameId: ID!
    name: String!
    platforms: [Platform!]!
}

type ChallengeRun {
    runId: ID!
    gameId: ID!
    runName: String!
    description: String!
    createdBy: User
    created: String
}

type ChallengeRunAttempt {
    attemptId: ID!
    runId: ID!
    status: Status
    started: String
    ended: String
}

type User {
    userId: ID!
    username: String!
    friendIds: [String!]!
    runs: [ChallengeRunAttempt]
}

type Query {
    getAllUsers: [User!]!
    getUserById(userId: ID!): User
    getAllGames: [Game!]!
    getGameById(gameId: ID!): Game
    getGameByName(name: String!): Game
}

type Mutation {
    createGame(name: String!, platforms: [Platform]): Game
    addPlatformToGame(gameId: ID!, platform: Platform!): Game
    createUser(username: String!): User
    addFriend(userId: ID!, friendUserId: ID!): User
    removeFriend(userId: ID!, friendUserId: ID!): User
}